{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/telix/Makipura/frontend/navigation/LoggedInNavigator.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport io from \"socket.io-client/dist/socket.io\";\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { mapStateToProps, mapDispatchToProps } from \"../state/mappers.js\";\nimport HomeNavigator from \"./HomeNavigator.js\";\nimport NotificationsScreen from \"../screens/NotificationsScreen.js\";\nimport Context from \"../state/context.js\";\nvar Drawer = createDrawerNavigator();\n\nvar LoggedInNavigator = function LoggedInNavigator(props) {\n  console.log(\"prining props from LoggedInNavigator:\");\n  console.log(props);\n\n  var _useState = useState(io(\"http://10.0.0.3:3000\", {\n    jsonp: false\n  })),\n      _useState2 = _slicedToArray(_useState, 2),\n      socket = _useState2[0],\n      setSocket = _useState2[1];\n\n  useEffect(function () {\n    socket.onAny(function (event) {\n      console.log(\"ANY \" + event);\n    });\n    socket.on(\"connect_error\", function () {\n      setTimeout(function () {\n        socket.connect();\n      }, 1000);\n    });\n    socket.on(\"disconnect\", function (reason) {\n      console.log(\"disconected\");\n    });\n  }, []);\n  var initial_context = {\n    socket: socket,\n    signedIn: false,\n    cookie: \"cookie\"\n  };\n\n  var LoggedInDrawer = function LoggedInDrawer() {\n    var context = React.useContext(Context);\n    console.log(\"context from LoggedInDrawer:\");\n    console.log(context);\n    return React.createElement(React.Fragment, null, React.createElement(Drawer.Navigator, {\n      initialRouteName: \"Home\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, React.createElement(Drawer.Screen, {\n      name: \"Home\",\n      component: HomeNavigator,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), React.createElement(Drawer.Screen, {\n      name: \"Notifications\",\n      component: NotificationsScreen,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    })));\n  };\n\n  return React.createElement(Context.Provider, {\n    context: initial_context,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(LoggedInDrawer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoggedInNavigator);","map":{"version":3,"sources":["/home/telix/Makipura/frontend/navigation/LoggedInNavigator.js"],"names":["React","useState","useEffect","connect","io","createDrawerNavigator","mapStateToProps","mapDispatchToProps","HomeNavigator","NotificationsScreen","Context","Drawer","LoggedInNavigator","props","console","log","jsonp","socket","setSocket","onAny","event","on","setTimeout","reason","initial_context","signedIn","cookie","LoggedInDrawer","context","useContext"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,EAAP,MAAe,iCAAf;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SAASC,eAAT,EAA0BC,kBAA1B;AACA,OAAOC,aAAP;AACA,OAAOC,mBAAP;AACA,OAAOC,OAAP;AAEA,IAAMC,MAAM,GAAGN,qBAAqB,EAApC;;AAEA,IAAMO,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK,EAAI;AAGjCC,EAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AAEA,kBAA4BZ,QAAQ,CAClCG,EAAE,CACA,sBADA,EAGA;AAAEY,IAAAA,KAAK,EAAE;AAAT,GAHA,CADgC,CAApC;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,SAAf;;AAQAhB,EAAAA,SAAS,CAAC,YAAM;AACde,IAAAA,MAAM,CAACE,KAAP,CAAa,UAACC,KAAD,EAAW;AACtBN,MAAAA,OAAO,CAACC,GAAR,UAAmBK,KAAnB;AACD,KAFD;AAGAH,IAAAA,MAAM,CAACI,EAAP,CAAU,eAAV,EAA2B,YAAM;AAE/BC,MAAAA,UAAU,CAAC,YAAM;AACfL,QAAAA,MAAM,CAACd,OAAP;AACD,OAFS,EAEP,IAFO,CAAV;AAEU,KAJZ;AAKAc,IAAAA,MAAM,CAACI,EAAP,CAAU,YAAV,EAAwB,UAACE,MAAD,EAAY;AAClCT,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,KAFD;AAGD,GAZQ,EAYL,EAZK,CAAT;AAcA,MAAMS,eAAe,GAAG;AACtBP,IAAAA,MAAM,EAAEA,MADc;AAEtBQ,IAAAA,QAAQ,EAAE,KAFY;AAGtBC,IAAAA,MAAM,EAAE;AAHc,GAAxB;;AAMA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAMC,OAAO,GAAG5B,KAAK,CAAC6B,UAAN,CAAiBnB,OAAjB,CAAhB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYa,OAAZ;AACA,WAAO,0CACL,oBAAC,MAAD,CAAQ,SAAR;AACE,MAAA,gBAAgB,EAAC,MADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,MAAD,CAAQ,MAAR;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAEpB,aAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAKE,oBAAC,MAAD,CAAQ,MAAR;AACE,MAAA,IAAI,EAAC,eADP;AAEE,MAAA,SAAS,EAAEC,mBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADK,CAAP;AAWD,GAfD;;AAiBE,SACE,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,OAAO,EAAEe,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKH,CAxDD;;AA0DA,eAAerB,OAAO,CAACG,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CK,iBAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport io from \"socket.io-client/dist/socket.io\"; \nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { mapStateToProps, mapDispatchToProps } from '../state/mappers.js';\nimport HomeNavigator from './HomeNavigator.js'\nimport NotificationsScreen from '../screens/NotificationsScreen.js';\nimport Context from '../state/context.js';\n\nconst Drawer = createDrawerNavigator();\n\nconst LoggedInNavigator = props => {\n\t\t/* this navigator defines the routes for a logged in user, \n\t\t * it provide the user logged in context information */\n\t\tconsole.log(\"prining props from LoggedInNavigator:\");\n\t\tconsole.log(props);\n\t\t\n\t\tconst [socket, setSocket] = useState( \n\t\t\t\tio(\n\t\t\t\t\t\t\"http://10.0.0.3:3000\", \n\t\t\t\t\t\t//'http://192.168.1.219:3000',\n\t\t\t\t\t\t{ jsonp: false }\n\t\t\t\t)\n\t\t);\n\n\t\tuseEffect(() => { \n\t\t\t\tsocket.onAny((event) => {\n\t\t\t\t\t\tconsole.log(`ANY ${event}`);\n\t\t\t\t});\n\t\t\t\tsocket.on(\"connect_error\", () => {  \n\t\t\t\t\t\t//console.log(\"connection error\");\n\t\t\t\t\t\tsetTimeout(() => {    \n\t\t\t\t\t\t\t\tsocket.connect();  \n\t\t\t\t\t\t}, 1000);});\n\t\t\t\tsocket.on(\"disconnect\", (reason) => {\n\t\t\t\t\t\tconsole.log(\"disconected\");\n\t\t\t\t});\n\t\t} , [])\n\n\t\tconst initial_context = { \n\t\t\t\tsocket: socket,\n\t\t\t\tsignedIn: false, \n\t\t\t\tcookie: \"cookie\" };\n\n\n\t\tconst LoggedInDrawer = () => {  \n\t\t\t\tconst context = React.useContext(Context)\n\t\t\t\tconsole.log(\"context from LoggedInDrawer:\")\n\t\t\t\tconsole.log(context);\n\t\t\t\treturn <>\n\t\t\t\t\t\t<Drawer.Navigator \n\t\t\t\t\t\t\t\tinitialRouteName=\"Home\">\n\t\t\t\t\t\t\t\t<Drawer.Screen \n\t\t\t\t\t\t\t\t\t\tname=\"Home\" \n\t\t\t\t\t\t\t\t\t\tcomponent={HomeNavigator} />\n\t\t\t\t\t\t\t\t<Drawer.Screen \n\t\t\t\t\t\t\t\t\t\tname=\"Notifications\" \n\t\t\t\t\t\t\t\t\t\tcomponent={NotificationsScreen} />\n\t\t\t\t\t\t</Drawer.Navigator>\n\t\t\t\t</>\n\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t\t<Context.Provider context={initial_context}>\n\t\t\t\t\t\t\t\t<LoggedInDrawer/>\n\t\t\t\t\t\t</Context.Provider>\n\t\t\t\t);\n}\n \nexport default connect(mapStateToProps, mapDispatchToProps)(LoggedInNavigator);\n\n"]},"metadata":{},"sourceType":"module"}