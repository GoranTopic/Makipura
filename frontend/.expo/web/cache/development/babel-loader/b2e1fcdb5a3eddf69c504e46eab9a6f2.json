{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport setCookie from 'set-cookie-parser';\nimport axios from \"./axios.js\";\n\nvar checkCookie = function checkCookie(cookie) {\n  var username,\n      _args = arguments;\n  return _regeneratorRuntime.async(function checkCookie$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          username = _args.length > 1 && _args[1] !== undefined ? _args[1] : null;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.get('/user/whoami', {}, {\n            withCredentials: false,\n            headers: {\n              Authorization: \"Bearer \" + cookie.value\n            }\n          }).then(function (res) {\n            if (username) return true;\n            if (res.data.username === username) return true;else return false;\n          }).catch(function (error) {\n            console.log(error);\n            if (error.response) console.log(error.response.data);\n            return null;\n          }));\n\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar signin = function signin(_ref) {\n  var username, password;\n  return _regeneratorRuntime.async(function signin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          username = _ref.username, password = _ref.password;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(axios.post('/auth/signin', {\n            \"username\": username,\n            \"password\": password\n          }, {\n            withCredentials: false\n          }).then(function (res) {\n            if (res.data.status === \"success\") {\n              var cookie = setCookie.parse(res, {\n                decodeValues: true\n              });\n              return {\n                success: true,\n                cookie: cookie\n              };\n            } else {\n              console.log(\"could not get success\");\n              console.log(res.data.status);\n              return {\n                suceess: false,\n                msg: res.data.msg\n              };\n            }\n          }).catch(function (error) {\n            throw error;\n          }));\n\n        case 3:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar signout = function signout() {\n  return _regeneratorRuntime.async(function signout$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(axios.post('/auth/signout').then(function (res) {\n            if (res.data.status === \"success\") return true;\n          }).catch(function (error) {\n            if (error.response) console.log(error.response.data);\n            return false;\n          }));\n\n        case 2:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 3:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport { signin, signout, checkCookie };","map":{"version":3,"sources":["/home/telix/Makipura/frontend/queries/auth.js"],"names":["setCookie","axios","checkCookie","cookie","username","get","withCredentials","headers","Authorization","value","then","res","data","catch","error","console","log","response","signin","password","post","status","parse","decodeValues","success","suceess","msg","signout"],"mappings":"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","sourcesContent":["import setCookie from 'set-cookie-parser';\nimport axios from './axios.js';\n\n\nconst checkCookie = async (cookie, username = null)  => \n\t\tawait axios.get('/user/whoami', { }, { \n\t\t\t\twithCredentials: false,\n\t\t\t\theaders: { Authorization: `Bearer ${cookie.value}` },\n\t\t}).then( res => {\n\t\t\t\tif(username) return true;\n\t\t\t\tif(res.data.username === username) return true;\n\t\t\t\telse return false;\n\t\t}).catch( error => {\n\t\t\t\tconsole.log(error);\n\t\t\t\tif(error.response) \n\t\t\t\t\t\tconsole.log(error.response.data); \n\t\t\t\treturn null;\n\t\t})\n\n\nconst signin = async ({ username, password }) =>  \n\t\tawait axios\n\t\t\t\t.post( '/auth/signin', {  //send query without \n\t\t\t\t\t\t\"username\": username, //auto seting the cookie value\n\t\t\t\t\t\t\"password\": password,\n\t\t\t\t}, { withCredentials: false })\n\t\t\t\t.then( res => { // handle success\n\t\t\t\t\t\tif(res.data.status === \"success\"){\n\t\t\t\t\t\t\t\tlet cookie = setCookie.parse(res, {\n\t\t\t\t\t\t\t\t\t\tdecodeValues: true  // default: true\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\treturn { success: true, cookie: cookie };\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tconsole.log(\"could not get success\");\n\t\t\t\t\t\t\t\tconsole.log(res.data.status);\n\t\t\t\t\t\t\t\treturn { suceess: false, msg: res.data.msg };\n\t\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch( error => { // handle error\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t//return { suceess: false, msg: error.response.data};\n\t\t\t\t})\n\nconst signout = async () =>\n\t\tawait axios\n\t\t\t\t.post('/auth/signout')\n\t\t\t\t.then( res => {\n\t\t\t\t\t\tif(res.data.status === \"success\") return true;\n\t\t\t\t})\n\t\t\t\t.catch( error => {\n\t\t\t\t\t\tif(error.response) \n\t\t\t\t\t\t\t\tconsole.log(error.response.data); \n\t\t\t\t\t\treturn false;\n\t\t\t\t})\n\nexport { signin, signout, checkCookie }\n"]},"metadata":{},"sourceType":"module"}