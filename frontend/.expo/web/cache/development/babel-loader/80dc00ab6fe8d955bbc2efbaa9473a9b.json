{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/telix/Makipura/frontend/App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport io from \"socket.io-client/dist/socket.io\";\nimport ChatListScreen from \"./screens/ChatListScreen.js\";\nimport ChatScreen from \"./screens/ChatScreen.js\";\nimport HomeScreen from \"./screens/HomeScreen.js\";\nimport LoginScreen from \"./screens/LoginScreen.js\";\nimport SignupScreen from \"./screens/SignupScreen.js\";\nimport NotificationsScreen from \"./screens/NotificationsScreen.js\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport AppNavigator from \"./navigation/AppNavigator.js\";\nimport Context from \"./state/context.js\";\nimport { Provider } from 'react-redux';\nimport store from \"./state/store.js\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(io(\"http://10.0.0.3:3000\", {\n    jsonp: false\n  })),\n      _useState2 = _slicedToArray(_useState, 2),\n      socket = _useState2[0],\n      setSocket = _useState2[1];\n\n  useEffect(function () {\n    socket.onAny(function (event) {\n      console.log(\"ANY \" + event);\n    });\n    socket.on(\"connect_error\", function () {\n      setTimeout(function () {\n        socket.connect();\n      }, 1000);\n    });\n    socket.on(\"disconnect\", function (reason) {\n      console.log(\"disconected\");\n    });\n  }, []);\n\n  var ContactStack = function ContactStack() {\n    return React.createElement(React.Fragment, null, React.createElement(Stack.Navigator, {\n      initialRouteName: \"ContactsList\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }\n    }, React.createElement(Stack.Screen, {\n      options: {\n        headerShown: false\n      },\n      name: \"ContactsList\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, function (props) {\n      return React.createElement(ContactListScreen, _extends({}, props, {\n        socket: socket,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 20\n        }\n      }));\n    }), React.createElement(Stack.Screen, {\n      options: {\n        headerShown: false\n      },\n      name: \"Chat\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, function (props) {\n      return React.createElement(ChatScreen, _extends({}, props, {\n        socket: socket,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 20\n        }\n      }));\n    })));\n  };\n\n  var loggedInTabs = function loggedInTabs() {\n    return React.createElement(React.Fragment, null, React.createElement(Tab.Navigator, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }\n    }, React.createElement(Tab.Screen, {\n      options: {\n        headerShown: false\n      },\n      name: \"Home\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, function (props) {\n      return React.createElement(HomeScreen, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 20\n        }\n      }));\n    }), React.createElement(Tab.Screen, {\n      name: \"Contacts\",\n      options: {\n        headerShown: false\n      },\n      component: ContactStack,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    })));\n  };\n\n  var loggedInStack = function loggedInStack() {\n    var initial_context = {\n      signedIn: false,\n      cookie: \"cookie\"\n    };\n    return React.createElement(React.Fragment, null, React.createElement(Context.Provider, {\n      context: initial_context,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, React.createElement(Stack.Navigator, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"LoggedInTabs\",\n      component: loggedInTabs,\n      options: {\n        headerShown: false\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }))));\n  };\n\n  var authStack = function authStack() {\n    return React.createElement(React.Fragment, null, React.createElement(Stack.Navigator, {\n      initialRouteName: \"Login\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"Login\",\n      options: {\n        headerShown: false\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, function (props) {\n      return React.createElement(LoginScreen, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 20\n        }\n      }));\n    }), React.createElement(Stack.Screen, {\n      name: \"Signup\",\n      options: {\n        headerShown: false\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, function (props) {\n      return React.createElement(SignupScreen, _extends({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 20\n        }\n      }));\n    })));\n  };\n\n  var signupTabs = React.createElement(React.Fragment, null, React.createElement(Tab.Navigator, {\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"AuthStack\",\n    component: authStack,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Home\",\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, function (props) {\n    return React.createElement(HomeScreen, _extends({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 22\n      }\n    }));\n  })));\n  var Drawer = createDrawerNavigator();\n  var loggedInDrawer = React.createElement(Drawer.Navigator, {\n    initialRouteName: \"loggedInStack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 26\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"loggedInStack\",\n    component: loggedInStack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Notifications\",\n    component: NotificationsScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }));\n  return React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }, React.createElement(AppNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["/home/telix/Makipura/frontend/App.js"],"names":["StatusBar","React","useEffect","useState","useCallback","io","ChatListScreen","ChatScreen","HomeScreen","LoginScreen","SignupScreen","NotificationsScreen","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","createDrawerNavigator","AppNavigator","Context","Provider","store","Stack","Tab","App","jsonp","socket","setSocket","onAny","event","console","log","on","setTimeout","connect","reason","ContactStack","headerShown","props","loggedInTabs","loggedInStack","initial_context","signedIn","cookie","authStack","signupTabs","Drawer","loggedInDrawer"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity, Button } from 'react-native';\nimport io from \"socket.io-client/dist/socket.io\"; \n// import this way to get around dependencies with react antive\nimport ChatListScreen from './screens/ChatListScreen.js';\nimport ChatScreen from './screens/ChatScreen.js';\nimport HomeScreen from './screens/HomeScreen.js';\nimport LoginScreen from './screens/LoginScreen.js';\nimport SignupScreen from './screens/SignupScreen.js';\nimport NotificationsScreen from './screens/NotificationsScreen.js';\n// import react navigation\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport AppNavigator from './navigation/AppNavigator.js';\n// import context\nimport Context from './state/context.js';\n// import reducer\nimport { Provider } from 'react-redux';\nimport store from './state/store.js';\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n\n\t\tconst [socket, setSocket] = useState( io(\n\t\t\t\t\"http://10.0.0.3:3000\", \n\t\t\t\t//'http://192.168.1.219:3000',\n\t\t\t\t{ jsonp: false }\n\t\t));\n\n\t\tuseEffect(() => { \n\t\t\t\tsocket.onAny((event) => {\n\t\t\t\t\t\tconsole.log(`ANY ${event}`);\n\t\t\t\t});\n\t\t\t\tsocket.on(\"connect_error\", () => {  \n\t\t\t\t\t\t//console.log(\"connection error\");\n\t\t\t\t\t\tsetTimeout(() => {    \n\t\t\t\t\t\t\t\tsocket.connect();  \n\t\t\t\t\t\t}, 1000);});\n\t\t\t\tsocket.on(\"disconnect\", (reason) => {\n\t\t\t\t\t\tconsole.log(\"disconected\");\n\t\t\t\t});\n\t\t} , [])\n\n\n\n\t\tconst ContactStack = () => <>\n\t\t\t\t<Stack.Navigator initialRouteName=\"ContactsList\">\n\t\t\t\t\t\t<Stack.Screen\n\t\t\t\t\t\t\t\toptions={{ headerShown: false }}\n\t\t\t\t\t\t\t\tname=\"ContactsList\">  \n\t\t\t\t\t\t\t\t{ props => <ContactListScreen {...props} socket={socket} /> }\n\t\t\t\t\t\t</Stack.Screen>\n\t\t\t\t\t\t<Stack.Screen \n\t\t\t\t\t\t\t\toptions={{ headerShown: false }}\n\t\t\t\t\t\t\t\tname=\"Chat\"\n\t\t\t\t\t\t\t\t//options={({ route }) => ({ title: route.params.contact.userID })} \n\t\t\t\t\t\t>  \n\t\t\t\t\t\t\t\t{ props => <ChatScreen {...props} socket={socket} /> }\n\t\t\t\t\t\t</Stack.Screen>\n\t\t\t\t</Stack.Navigator>\n\t\t</>\n\n\n\t\tconst loggedInTabs = () => <>\n\t\t\t\t<Tab.Navigator>\n\t\t\t\t\t\t<Tab.Screen \n\t\t\t\t\t\t\t\toptions={{ headerShown: false }}\n\t\t\t\t\t\t\t\tname=\"Home\">  \n\t\t\t\t\t\t\t\t{ props => <HomeScreen {...props} /> }\n\t\t\t\t\t\t</Tab.Screen>\n\t\t\t\t\t\t<Tab.Screen\n\t\t\t\t\t\t\t\tname=\"Contacts\"\n\t\t\t\t\t\t\t\toptions={{ headerShown: false }}\n\t\t\t\t\t\t\t\tcomponent={ContactStack}/>  \n\t\t\t\t</Tab.Navigator>\n\t\t</>\n\n\t\t\t\t// render this stack if user is logged In\n\t\t\t\tconst loggedInStack = () => {  \n\t\t\t\t\t\tconst initial_context = { signedIn: false, cookie: \"cookie\" };\n\t\t\t\t\t\treturn <>\n\t\t\t\t\t\t\t\t<Context.Provider context={initial_context}>\n\t\t\t\t\t\t\t\t\t\t<Stack.Navigator>\n\t\t\t\t\t\t\t\t\t\t\t\t<Stack.Screen name=\"LoggedInTabs\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcomponent={loggedInTabs}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions={{ headerShown: false }} />  \n\t\t\t\t\t\t\t\t\t\t</Stack.Navigator>  \n\t\t\t\t\t\t\t\t</Context.Provider>\n\t\t\t\t\t\t</>\n\t\t\t\t}\n\n\n\t\tconst authStack = () =>  <>\n\t\t\t\t<Stack.Navigator initialRouteName=\"Login\">\n\t\t\t\t\t\t<Stack.Screen \n\t\t\t\t\t\t\t\tname=\"Login\"\n\t\t\t\t\t\t\t\toptions={{ headerShown: false }} >\n\t\t\t\t\t\t\t\t{ props => <LoginScreen {...props} /> }\n\t\t\t\t\t\t</Stack.Screen>\n\t\t\t\t\t\t<Stack.Screen \n\t\t\t\t\t\t\t\tname=\"Signup\"\n\t\t\t\t\t\t\t\toptions={{ headerShown: false }} >\n\t\t\t\t\t\t\t\t{ props => <SignupScreen {...props} /> }\n\t\t\t\t\t\t</Stack.Screen>\n\t\t\t\t</Stack.Navigator>  \n\t\t</>\n\n\t\t\t\tconst signupTabs = <>\n\t\t\t\t\t\t<Tab.Navigator initialRouteName=\"Home\" >\n\t\t\t\t\t\t\t\t<Tab.Screen \n\t\t\t\t\t\t\t\t\t\tname=\"AuthStack\"\n\t\t\t\t\t\t\t\t\t\tcomponent={authStack}\n\t\t\t\t\t\t\t\t\t\toptions={{ headerShown: false }} />  \n\t\t\t\t\t\t\t\t<Tab.Screen name=\"Home\" \n\t\t\t\t\t\t\t\t\t\toptions={{ headerShown: false }} >  \n\t\t\t\t\t\t\t\t\t\t{ props => <HomeScreen {...props} /> }\n\t\t\t\t\t\t\t\t</Tab.Screen>\n\t\t\t\t\t\t</Tab.Navigator>\n\t\t\t\t</>\n\n\t\t\t\tconst Drawer = createDrawerNavigator();\n\n\t\tconst loggedInDrawer = <Drawer.Navigator initialRouteName=\"loggedInStack\">\n\t\t\t\t<Drawer.Screen \n\t\t\t\t\t\tname=\"loggedInStack\" \n\t\t\t\t\t\tcomponent={loggedInStack} />\n\t\t\t\t<Drawer.Screen name=\"Notifications\" component={NotificationsScreen} />\n\t\t</Drawer.Navigator>\n\n\t\t\t\treturn (\n\t\t\t\t\t\t<Provider store={store}>\n\t\t\t\t\t\t\t\t<AppNavigator/>\n\t\t\t\t\t\t</Provider>\n\t\t\t\t);\n}\n\n"]},"metadata":{},"sourceType":"module"}