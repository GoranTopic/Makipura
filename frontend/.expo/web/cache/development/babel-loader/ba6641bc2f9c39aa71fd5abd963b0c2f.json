{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/home/telix/Makipura/frontend/navigation/ChatNavigator.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { mapStateToProps, mapDispatchToProps } from \"../state/mappers.js\";\nimport ChatListScreen from \"../screens/ChatListScreen\";\nimport ChatScreen from \"../screens/ChatScreen.js\";\nimport Context from \"../state/context.js\";\nvar Stack = createNativeStackNavigator();\n\nvar ChatNavigator = function ChatNavigator(props) {\n  var context = React.useContext(Context);\n  console.log(\"Ccontext from ChatNavigator:\");\n  console.log(context);\n  var ChatStack = React.createElement(React.Fragment, null, React.createElement(Stack.Navigator, {\n    initialRouteName: \"ChatList\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    options: {\n      headerShown: false\n    },\n    name: \"ChatList\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, function (props) {\n    return React.createElement(ChatListScreen, _extends({}, props, {\n      socket: socket,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 20\n      }\n    }));\n  }), React.createElement(Stack.Screen, {\n    name: \"Chat\",\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, function (props) {\n    return React.createElement(ChatScreen, _extends({}, props, {\n      socket: socket,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 20\n      }\n    }));\n  })));\n  return ChatStack;\n};\n\nexport default connect(mapStateToProps)(ChatNavigator);","map":{"version":3,"sources":["/home/telix/Makipura/frontend/navigation/ChatNavigator.js"],"names":["React","connect","createNativeStackNavigator","mapStateToProps","mapDispatchToProps","ChatListScreen","ChatScreen","Context","Stack","ChatNavigator","props","context","useContext","console","log","ChatStack","headerShown","socket"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,eAAT,EAA0BC,kBAA1B;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;AACA,OAAOC,OAAP;AAEA,IAAMC,KAAK,GAAGN,0BAA0B,EAAxC;;AAGA,IAAMO,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAC7B,MAAMC,OAAO,GAAGX,KAAK,CAACY,UAAN,CAAiBL,OAAjB,CAAhB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AAEA,MAAMI,SAAS,GAAG,0CAChB,oBAAC,KAAD,CAAO,SAAP;AACE,IAAA,gBAAgB,EAAC,UADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,OAAO,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf,KADX;AAEE,IAAA,IAAI,EAAC,UAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,UAAAN,KAAK;AAAA,WAAI,oBAAC,cAAD,eAAoBA,KAApB;AAA2B,MAAA,MAAM,EAAEO,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;AAAA,GAHT,CAFF,EAOE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,MADP;AAGE,IAAA,OAAO,EAAE;AAAED,MAAAA,WAAW,EAAE;AAAf,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,UAAAN,KAAK;AAAA,WAAI,oBAAC,UAAD,eAAgBA,KAAhB;AAAuB,MAAA,MAAM,EAAEO,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;AAAA,GAJT,CAPF,CADgB,CAAlB;AAiBE,SAAOF,SAAP;AACH,CAvBD;;AA0BA,eAAed,OAAO,CAACE,eAAD,CAAP,CAAyBM,aAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { mapStateToProps, mapDispatchToProps } from '../state/mappers.js';\nimport ChatListScreen from '../screens/ChatListScreen';\nimport ChatScreen from '../screens/ChatScreen.js';\nimport Context from '../state/context.js';\n\nconst Stack = createNativeStackNavigator();\n\n\nconst ChatNavigator = props => {\n\t\tconst context = React.useContext(Context)\n\t\tconsole.log(\"Ccontext from ChatNavigator:\")\n\t\tconsole.log(context)\n\n\t\tconst ChatStack = <>\n\t\t\t\t<Stack.Navigator \n\t\t\t\t\t\tinitialRouteName=\"ChatList\">\n\t\t\t\t\t\t<Stack.Screen\n\t\t\t\t\t\t\t\toptions={{ headerShown: false }}\n\t\t\t\t\t\t\t\tname=\"ChatList\">  \n\t\t\t\t\t\t\t\t{ props => <ChatListScreen {...props} socket={socket} /> }\n\t\t\t\t\t\t</Stack.Screen>\n\t\t\t\t\t\t<Stack.Screen \n\t\t\t\t\t\t\t\tname=\"Chat\"\n\t\t\t\t\t\t\t\t//options={({ route }) => ({ title: route.params.contact.userID })} \n\t\t\t\t\t\t\t\toptions={{ headerShown: false }} >  \n\t\t\t\t\t\t\t\t{ props => <ChatScreen {...props} socket={socket} /> }\n\t\t\t\t\t\t</Stack.Screen>\n\t\t\t\t</Stack.Navigator>\n\t\t</>\n\t\t\n\t\t\t\treturn ChatStack;\n}\n\n  \nexport default connect(mapStateToProps)(ChatNavigator);\n\n"]},"metadata":{},"sourceType":"module"}