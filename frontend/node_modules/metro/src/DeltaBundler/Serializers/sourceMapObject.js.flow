 * @flow strict-local
async function sourceMapObjectNonBlocking(
  });
  });
  |},
  |},
    +excludeSource: boolean,
    +excludeSource: boolean,
function sourceMapObject(
  options: {|
  options: {|






  const generator = sourceMapGenerator(modules, options);
import type {MixedSourceMap} from 'metro-source-map';
import type {Module} from '../types.flow';
  sourceMapObject,
 * This source code is licensed under the MIT license found in the
  sourceMapGenerator,
}
}
  sourceMapObjectNonBlocking,
 * @format
const {
  modules: $ReadOnlyArray<Module<>>,
  modules: $ReadOnlyArray<Module<>>,
/**
 * LICENSE file in the root directory of this source tree.
} = require('./sourceMapGenerator');
): Promise<MixedSourceMap> {
): MixedSourceMap {
module.exports = {
'use strict';
  sourceMapGeneratorNonBlocking,
  return generator.toMap(undefined, {
  return generator.toMap(undefined, {
  const generator = await sourceMapGeneratorNonBlocking(modules, options);
};
    +processModuleFilter: (module: Module<>) => boolean,
    +processModuleFilter: (module: Module<>) => boolean,
 *
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 */
    excludeSource: options.excludeSource,
    excludeSource: options.excludeSource,
